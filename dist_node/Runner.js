'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();var _Console=require('./Console');const Runner={};exports.default=Runner;const jobs=[];Runner.doPromise=doPromise;function doPromise(){return new Promise(resolve=>Runner.doNext(resolve))}Runner.doNext=doNext;function doNext(job,args=[],priority=0){jobs.push({job,args,priority});Runner.runQueue()}Runner.runQueue=runQueue;let isQueueRunning=false;function runQueue(){try{if(jobs.length===0){return}if(isQueueRunning){return}isQueueRunning=true;let highestPriorityJobPosition=0;for(let i=1;i<jobs.length;i++){if(jobs[highestPriorityJobPosition].priority<jobs[i].priority){highestPriorityJobPosition=i}}var _jobs$splice=jobs.splice(highestPriorityJobPosition,1);var _jobs$splice2=_slicedToArray(_jobs$splice,1);var _jobs$splice2$=_jobs$splice2[0];const job=_jobs$splice2$.job;const args=_jobs$splice2$.args;Runner.runTask(job,args,Runner.runNext)}catch(e){console.error(e.stack||e.message||e)}}let tasksRunInRow=0;const MAX_TASKS_RUN_IN_ROW=500;Runner.runNext=runNext;function runNext(){if(tasksRunInRow<MAX_TASKS_RUN_IN_ROW){Promise.resolve().then(()=>{isQueueRunning=false;tasksRunInRow++;Runner.runQueue()})}else{setTimeout(()=>{isQueueRunning=false;tasksRunInRow=1;Runner.runQueue()},0)}}Runner.runTask=runTask;function runTask(job,args,next){switch(args.length){case 0:{job();break}case 1:{job(args[0]);break}case 2:{job(args[0],args[1]);break}case 3:{job(args[0],args[1],args[2]);break}default:{job.apply(null,args);break}}next()}