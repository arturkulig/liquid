'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();exports.start=start;exports.call=call;exports.stop=stop;var _Kernel=require('./Kernel');var _Process=require('./Process');var Process=_interopRequireWildcard(_Process);var _Console=require('./Console');var _utils=require('./utils');var _createSymbol=require('./createSymbol');var _createSymbol2=_interopRequireDefault(_createSymbol);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}const STOP=(0,_createSymbol2.default)('STOP');function start(handler=_utils.noop,name){return(0,_Kernel.spawn)((()=>{var _ref=_asyncToGenerator(function*(receive,pid){let state;while(true){var _ref2=yield receive();var _ref3=_slicedToArray(_ref2,2);const payload=_ref3[0];const resolve=_ref3[1];if(payload===STOP){Process.endOf(pid).then(function(){return resolve([true,STOP])});return}try{var _ref4=yield handler(payload,state,pid);var _ref5=_slicedToArray(_ref4,2);const reply=_ref5[0];const newState=_ref5[1];state=newState;resolve([true,reply])}catch(e){_Console.externalConsole.error(`Liquid.GenServer ${name||'GenServer'} handler caused error due to`,payload);_Console.externalConsole.error(e.stack||e.message||e);resolve([false,'Liquid.GenServer handler committed an error',e])}}});return function(_x,_x2){return _ref.apply(this,arguments)}})(),name)}function call(genServerPID,payload){if(!Process.isAlive(genServerPID)){return[false,'Liquid.GenServer.call process is dead']}return new Promise((()=>{var _ref6=_asyncToGenerator(function*(resolve){try{yield(0,_Kernel.send)(genServerPID,[payload,resolve])}catch(e){resolve([false,e])}});return function(_x3){return _ref6.apply(this,arguments)}})())}function stop(genServerPID){if(!Process.isAlive(genServerPID)){return[false,'Liquid.GenServer.call process is dead']}return call(genServerPID,STOP)}